<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>个人博客</title><link>https://lcm1840.github.io/lcm.github.io</link><description>个人笔记</description><copyright>个人博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>http://bpic.588ku.com/element_origin_min_pic/19/03/06/85a7d2cac499acf94140832486c837a1.jpg</url><title>avatar</title><link>https://lcm1840.github.io/lcm.github.io</link></image><lastBuildDate>Mon, 15 Jul 2024 13:51:10 +0000</lastBuildDate><managingEditor>个人博客</managingEditor><ttl>60</ttl><webMaster>个人博客</webMaster><item><title>biji</title><link>https://lcm1840.github.io/lcm.github.io/post/biji.html</link><description>bash &lt;(curl -s -L https://git.io/v2ray-setup.sh)&#13;
&#13;
docker run --name=wxedge --restart=always --privileged --net=host --tmpfs /run --tmpfs /tmp -v /data/wxedge_storage:/storage:rw -d registry.cn-hangzhou.aliyuncs.com/onething/wxedge&#13;
     ip：18888&#13;
&#13;
docker run -dit \&#13;
  -v $PWD/ql:/ql/data \&#13;
  -p 5700:5700 \&#13;
  --name ql-debian \&#13;
  --hostname ql-debian \&#13;
  --restart unless-stopped \&#13;
  whyour/qinglong:debian-python3.10&#13;
&#13;
1Panel 是新一代的 Linux 服务器运维管理面板&#13;
RedHat / CentOS&#13;
&#13;
curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sh quick_start.sh&#13;
&#13;
Ubuntu&#13;
&#13;
curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sudo bash quick_start.sh&#13;
&#13;
Debian&#13;
&#13;
curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sh quick_start.sh。</description><guid isPermaLink="true">https://lcm1840.github.io/lcm.github.io/post/biji.html</guid><pubDate>Mon, 15 Jul 2024 12:47:53 +0000</pubDate></item><item><title>Docker官方安装包</title><link>https://lcm1840.github.io/lcm.github.io/post/Docker-guan-fang-an-zhuang-bao.html</link><description>6月以来，大量Docker镜像网站停服，Docker无法下载安装&#13;
本仓库致力于解决国内网络原因无法使用Docker的问题。</description><guid isPermaLink="true">https://lcm1840.github.io/lcm.github.io/post/Docker-guan-fang-an-zhuang-bao.html</guid><pubDate>Sun, 07 Jul 2024 14:36:03 +0000</pubDate></item><item><title># 青龙面板RabbitPro短信/扫码登录安装教程</title><link>https://lcm1840.github.io/lcm.github.io/post/%23%20-qing-long-mian-ban-RabbitPro-duan-xin---sao-ma-deng-lu-an-zhuang-jiao-cheng.html</link><description>&#13;
# 青龙面板RabbitPro短信/扫码登录安装教程&#13;
&#13;
### FAKER整理 TG频道 https://t.me/Soucetalk&#13;
&#13;
### 2024-03 RabbitPro暂时无法获取新许可，已有许可需要重装最新版本的可继续操作。</description><guid isPermaLink="true">https://lcm1840.github.io/lcm.github.io/post/%23%20-qing-long-mian-ban-RabbitPro-duan-xin---sao-ma-deng-lu-an-zhuang-jiao-cheng.html</guid><pubDate>Thu, 04 Jul 2024 08:45:08 +0000</pubDate></item><item><title>基于chatgpt-on-wechat的微信个人对话机器人搭建</title><link>https://lcm1840.github.io/lcm.github.io/post/ji-yu-chatgpt-on-wechat-de-wei-xin-ge-ren-dui-hua-ji-qi-ren-da-jian.html</link><description>## 1.开源项目选定&#13;
现在gpt很火,git中大佬们都创建了很多高星项目,我这里选用了chatgpt-on-wechat(项目地址:https://github.com/zhayujie/chatgpt-on-wechat),这个项目在扩展时也很舒服,大家可以去拉下来看看,学习源码才能方便后续的扩展&#13;
## 2.服务器选定&#13;
国内服务:前置条件需要走代理(这个不方便说,项目中也有对应的方案,大家可以看一下)&#13;
国外服务器:没有前置条件&#13;
配置方面自己玩的1核1G也可以正常运行&#13;
## 3.ChatGPT ApiKey的获取&#13;
自己开发的话可以使用免费账号的apikey,在登陆账号后,访问以下地址&#13;
(1)新建apikey的地址:https://platform.openai.com/account/api-keys&#13;
&#13;
(2)查看该账号额度的地址:https://platform.openai.com/account/usage&#13;
&#13;
需注意不是所有的账号有key就可以用哈,大家要看看有没有额度,Expired 后面的时间是你额度的能使用的截止时间,超过这个时间,就是有额度也用不了了&#13;
## 4.部署项目\ndocker方式：&#13;
(1)拉取python镜像,进入容器&#13;
sudo docker pull python:3.9&#13;
sudo docker run -it --name wechatbot python:3.9 bash&#13;
(2)克隆项目代码&#13;
git clone https://github.com/zhayujie/chatgpt-on-wechat chatgpt-on-wechat-ai\ncd chatgpt-on-wechat-ai/&#13;
普通部署方式：&#13;
(1)配置python3.8或3.9环境,网上好多教程,此处不做赘述&#13;
(2)克隆项目代码,拷贝时请按自己的路径进行修改&#13;
cd /home/admin/wechatbot&#13;
git clone https://github.com/zhayujie/chatgpt-on-wechat chatgpt-on-wechat-ai&#13;
cd chatgpt-on-wechat-ai/&#13;
项目配置：&#13;
(1)安装相关依赖&#13;
#安装核心依赖 (必选)&#13;
#能够使用'itchat'创建机器人，并具有文字交流功能所需的最小依赖集合。</description><guid isPermaLink="true">https://lcm1840.github.io/lcm.github.io/post/ji-yu-chatgpt-on-wechat-de-wei-xin-ge-ren-dui-hua-ji-qi-ren-da-jian.html</guid><pubDate>Sat, 29 Jun 2024 05:30:35 +0000</pubDate></item><item><title>怎样一键搭建telegram电报专用MTProto代理服务器</title><link>https://lcm1840.github.io/lcm.github.io/post/zen-yang-yi-jian-da-jian-telegram-dian-bao-zhuan-yong-MTProto-dai-li-fu-wu-qi.html</link><description>注意：此脚本安装的是绿色版，安装卸载都非常简单，并配置有TLS域名伪装；&#13;
&#13;
GitHub：GitHub - sunpma/mtp: MTProy TLS 绿色版一键安装脚本&#13;
&#13;
&#13;
&#13;
1. 安装&#13;
执行如下代码进行安装&#13;
&#13;
# 创建程序目录并进入&#13;
&#13;
mkdir /home/mtproxy &amp;&amp; cd /home/mtproxy&#13;
# 创建程序目录并进入# 下载程序并配置安装&#13;
&#13;
curl -s -o mtproxy.sh https://raw.githubusercontent.com/sunpma/mtp/master/mtproxy.sh &amp;&amp; chmod +x mtproxy.sh &amp;&amp; bash mtproxy.sh&#13;
2. 安装过程：直接回车或者自己按说明配置&#13;
=========================================&#13;
&#13;
请输入一个客户端连接端口 [1-65535]&#13;
&#13;
(默认端口: 443):433（说明：自定义链接端口）&#13;
&#13;
 &#13;
&#13;
---------------------------&#13;
&#13;
port = 443&#13;
&#13;
---------------------------&#13;
&#13;
 &#13;
&#13;
请输入一个管理端口 [1-65535]&#13;
&#13;
(默认端口: 8888):8888（说明：自定义管理端口）&#13;
&#13;
 &#13;
&#13;
---------------------------&#13;
&#13;
manage port = 8888&#13;
&#13;
---------------------------&#13;
&#13;
 &#13;
&#13;
请输入一个需要伪装的域名：&#13;
&#13;
(默认域名: azure.microsoft.com):azure.microsoft.com（说明：自定义TLS伪装域名）&#13;
&#13;
状态码：302&#13;
&#13;
 &#13;
&#13;
---------------------------&#13;
&#13;
伪装域名 = azure.microsoft.com&#13;
&#13;
---------------------------&#13;
&#13;
 &#13;
&#13;
请输入你需要推广的TAG：&#13;
&#13;
若没有,请联系 @MTProxybot 进一步创建你的TAG&#13;
&#13;
(留空则跳过):（说明：默认跳过或输入TAG）&#13;
&#13;
 &#13;
&#13;
---------------------------&#13;
&#13;
PROXY TAG = &#13;
&#13;
---------------------------&#13;
&#13;
 &#13;
&#13;
配置已经生成完毕!&#13;
&#13;
TMProxy+TLS代理: 运行中&#13;
&#13;
服务器IP：132.145.91.50&#13;
&#13;
服务器端口：65534&#13;
&#13;
MTProxy Secret:  xxxxxx&#13;
&#13;
TG一键链接: https://t.me/xxxxxx&#13;
&#13;
TG一键链接: tg://xxxxxx&#13;
&#13;
=========================================&#13;
&#13;
3. 使用&#13;
# 进入程序目录&#13;
&#13;
cd /home/mtproxy&#13;
 &#13;
&#13;
# 运行&#13;
&#13;
bash mtproxy.sh start&#13;
 &#13;
&#13;
# 调试&#13;
&#13;
bash mtproxy.sh debug&#13;
 &#13;
&#13;
# 停止&#13;
&#13;
bash mtproxy.sh stop&#13;
 &#13;
&#13;
# 重启&#13;
&#13;
bash mtproxy.sh restart&#13;
4. 卸载&#13;
因为是绿色版卸载极其简单，直接删除程序目录即可；&#13;
&#13;
rm -rf /home/mtproxy&#13;
5. 设置开机启动&#13;
# 编辑自启文件&#13;
&#13;
&#13;
vi /etc/rc.local&#13;
 &#13;
&#13;
# 添加如下代码&#13;
&#13;
bash /home/mtproxy/mtproxy.sh start &gt; /dev/null 2&gt;&amp;1 &amp;&#13;
自此完成。</description><guid isPermaLink="true">https://lcm1840.github.io/lcm.github.io/post/zen-yang-yi-jian-da-jian-telegram-dian-bao-zhuan-yong-MTProto-dai-li-fu-wu-qi.html</guid><pubDate>Sat, 29 Jun 2024 04:38:34 +0000</pubDate></item><item><title>安装docker</title><link>https://lcm1840.github.io/lcm.github.io/post/an-zhuang-docker.html</link><description>## [安装之前现卸载系统上原有的Docker]&#13;
`yum remove docker \`&#13;
&gt;                   docker-client \&#13;
&gt;                   docker-client-latest \&#13;
&gt;                   docker-common \&#13;
&gt;                   docker-latest \&#13;
&gt;                   docker-latest-logrotate \&#13;
&gt;                   docker-logrotate \&#13;
&gt;                   docker-engine`&#13;
&#13;
## 2、安装需要的安装包yum-utils&#13;
`yum install -y yum-utils`&#13;
## 3、设置镜像仓库地址&#13;
`yum-config-manager \&#13;
    --add-repo \&#13;
    https://download.docker.com/linux/centos/docker-ce.repo` &#13;
  ##此地址为官方的仓库地址，在国内建议不要用&#13;
 `yum-config-manager \&#13;
  --add-repo \&#13;
   http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo` &#13;
 #阿里云的镜像仓库地址&#13;
## 4、安装docker相关的引擎&#13;
#先更新yum软件包索引&#13;
 	`yum makecache fase` &#13;
## 默认安装最新的docker&#13;
`yum install docker-ce docker-ce-cli containerd.io`&#13;
## 5、启动docker&#13;
`systemctl start docker`&#13;
`systemctl enable docker`&#13;
验证安装是否成功&#13;
`docker version`&#13;
&#13;
## 重启容器&#13;
`docker restart r`&#13;
&#13;
&#13;
`docker ps -a`&#13;
&#13;
`docker rm `                &lt;CONTAINER_ID or CONTAINER_NAME&gt;&#13;
`docker rm -f `              &lt;CONTAINER_ID or CONTAINER_NAME&gt;&#13;
&#13;
`docker images`&#13;
`docker rmi `        &lt;镜像ID&gt;&#13;
`docker rmi -f `    &lt;镜像ID&gt;。</description><guid isPermaLink="true">https://lcm1840.github.io/lcm.github.io/post/an-zhuang-docker.html</guid><pubDate>Thu, 27 Jun 2024 11:18:30 +0000</pubDate></item></channel></rss>